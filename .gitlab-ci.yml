# use the official gcc image, based on debian
image: gcc

build-mac:
  stage: build
  tags:
    - mac
  script:
    - echo "Building CADventory on Mac `hostname` at `pwd`"
    - echo "PATH=$PATH"
    - mkdir .build
    - cd .build
    - echo "compilation artifact from project:$CI_PROJECT_PATH, branch:$CI_COMMIT_BRANCH, job_url:$CI_JOB_URL" > artifact.txt
    - /opt/homebrew/bin/cmake -DCMAKE_PREFIX_PATH=/opt/homebrew/Cellar/qt/6.6.1 -DCMAKE_OSX_ARCHITECTURES=arm64 ..
    - make -j4
    - find .
  artifacts:
    paths:
      - .build/artifact.txt
      - .build/cadventory

build-linux:
  stage: build
  tags: 
    - linux
  script:
    - echo "Building CADventory on Linux `hostname` at `pwd`"
    - echo "PATH=$PATH"
    - apt update && apt -y install cmake
    - apt -y install qt6-base-dev
    - mkdir .build
    - cd .build
    - echo "compilation artifact from project:$CI_PROJECT_PATH, branch:$CI_COMMIT_BRANCH, job_url:$CI_JOB_URL" > artifact.txt
    - cmake ..
    - make -j4
    - find .
  artifacts:
    paths:
      - .build/artifact.txt
      - .build/cadventory

test-mac:
  stage: test
  tags:
    - mac
  script:
    - echo "Testing CADventory on Mac `hostname` at `pwd`"
    - ls -la
    - find .
    - file .build/cadventory
    - .build/cadventory --no-gui

test-linux:
  stage: test
  tags:
    - linux
  script:
    - echo "Testing CADventory on Linux `hostname` at `pwd`"
    - ls -la
    - find .
    - file .build/cadventory
    - .build/cadventory --no-gui

deploy-mac:
  stage: deploy
  tags:
    - mac
  script:
    - echo "Deploying CADventory on Mac `hostname` at `pwd`"
  environment: production

deploy-linux:
  stage: deploy
  tags:
    - linux
  script:
    - echo "Deploying CADventory on Linux `hostname` at `pwd`"
  environment: production
  