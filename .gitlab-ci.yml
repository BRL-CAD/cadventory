# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
 - build
 - test
 - deploy  # dummy stage to follow the template guidelines
 - review
 - dast
 - staging
 - canary
 - production
 - incremental rollout 10%
 - incremental rollout 25%
 - incremental rollout 50%
 - incremental rollout 100%
 - performance
 - cleanup

include:
- template: Auto-DevOps.gitlab-ci.yml

# image: alpine

# use the official gcc image, based on debian
image: gcc

build_linux:
  stage: build
  script:
    - echo "Building CADventory"
    - echo "artifact from project:$CI_PROJECT_PATH, branch:$CI_COMMIT_BRANCH, job_url:$CI_JOB_URL" > artifact.txt
    - apt update && apt -y install cmake
    - g++ helloworld.cpp -o cadventory
  artifacts:
    paths:
      - artifact.txt
      - cadventory

build_windows:
  stage: build
  tags:
    - windows
  before_script:
    - Start-Service -Name "docker"
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_SLUG} . 
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_REF_SLUG}
    - echo "artifact from project:$CI_PROJECT_PATH, branch:$CI_COMMIT_BRANCH, job_url:$CI_JOB_URL" > artifact.txt
  artifacts:
    paths:
      -artifact.txt

test:
  stage: test
  script:
    - echo "Testing CADventory"
    - ls -la
    - ./cadventory

deploy:
  stage: deploy
  script:
    - echo "Deploying CADventory"
  environment: production

